[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Misc Presentations",
    "section": "",
    "text": "Misc Presentations\nClick Home link in lower right to get back to this page."
  },
  {
    "objectID": "co-work-oct-25.html#todays-theme",
    "href": "co-work-oct-25.html#todays-theme",
    "title": "Agile Oct 25, 2023",
    "section": "Today’s theme",
    "text": "Today’s theme\n\nKeep working together on Pathways\nLearn a little about “agile” methodologies\nLearn about GitHub project boards\nco-work"
  },
  {
    "objectID": "co-work-oct-25.html#what-is-agile",
    "href": "co-work-oct-25.html#what-is-agile",
    "title": "Agile Oct 25, 2023",
    "section": "What is agile?",
    "text": "What is agile?\nA lightweight workflow structure for software development which is characterized by 4 key features.\nToday agile methodologies are the norm in software development, and are widely used for other types of project management.\nTerm is traced back to the 2001 Agile Manifesto, but the ideas are much earlier and broader."
  },
  {
    "objectID": "co-work-oct-25.html#elements",
    "href": "co-work-oct-25.html#elements",
    "title": "Agile Oct 25, 2023",
    "section": "4 elements",
    "text": "4 elements"
  },
  {
    "objectID": "co-work-oct-25.html#task-cycles",
    "href": "co-work-oct-25.html#task-cycles",
    "title": "Agile Oct 25, 2023",
    "section": "Task cycles",
    "text": "Task cycles\nA key element of agile methodologies is iterative cycles\n\nThis was popularized by the work of William Edwards Deming.\n\n1 Leading thinker in statistical quality control and industrial engineering in the 1950s to 1980s. Plan-Do-Check-Act (PDCA) cycle."
  },
  {
    "objectID": "co-work-oct-25.html#experiential-learning",
    "href": "co-work-oct-25.html#experiential-learning",
    "title": "Agile Oct 25, 2023",
    "section": "Experiential learning",
    "text": "Experiential learning\nIn “experiential learning” (David A Kolb, 1970s-1980s), the activity is the teacher via explicit periods of reflection and experimentation."
  },
  {
    "objectID": "co-work-oct-25.html#self-organizing-workflows",
    "href": "co-work-oct-25.html#self-organizing-workflows",
    "title": "Agile Oct 25, 2023",
    "section": "Self-organizing workflows",
    "text": "Self-organizing workflows\nA workflow or structure that naturally and organically improves team (or project) flow and efficiency.\n\n\nTask boards\n\nvisualize your workflow\nteam awareness\nencourages cycles of work\n\n\nFacetime\n\nshort frequent synchronous check-ins, aka “stand-ups”\nco-working, group or often paired"
  },
  {
    "objectID": "co-work-oct-25.html#task-boards-1",
    "href": "co-work-oct-25.html#task-boards-1",
    "title": "Agile Oct 25, 2023",
    "section": "Task boards",
    "text": "Task boards"
  },
  {
    "objectID": "co-work-oct-25.html#github-project-boards",
    "href": "co-work-oct-25.html#github-project-boards",
    "title": "Agile Oct 25, 2023",
    "section": "GitHub project boards",
    "text": "GitHub project boards\nLet’s start a project board with GitHub!\n\nCreate a board\nMake some issues\nAdd issues to a board"
  },
  {
    "objectID": "co-work-oct-25.html#minutes-of-co-work-time",
    "href": "co-work-oct-25.html#minutes-of-co-work-time",
    "title": "Agile Oct 25, 2023",
    "section": "30 minutes of co-work time",
    "text": "30 minutes of co-work time\n\n\nWork on Pathways\n\nIdeas for things needed to move you towards a Pathway goals\nIdentify some concrete tasks\n\n\nGitHub Project Boards\n\nPlay around\nRaise hand or post in chat for help\nMentors/helpers can go in a breakout room with you\n\n\n\nSuper ok to jump in an out of break out rooms to see what folks are talking about!\n\n\nHome"
  },
  {
    "objectID": "REST-API-feb-28.html#what-is-a-rest-api",
    "href": "REST-API-feb-28.html#what-is-a-rest-api",
    "title": "Quick Start: REST API in R",
    "section": "What is a REST API?",
    "text": "What is a REST API?\nTLDC; It is a way we can get some data off a database using an URL–if the database folk set up a REST API for us."
  },
  {
    "objectID": "REST-API-feb-28.html#example",
    "href": "REST-API-feb-28.html#example",
    "title": "Quick Start: REST API in R",
    "section": "Example",
    "text": "Example\nRepos on nmfs-opensci using the GitHub REST API\n\norg <- \"nmfs-opensci\"\nurl <- paste0(\"https://api.github.com/search/repositories?q=org:\", org)\nres <- httr::GET(url)\ndat <- jsonlite::fromJSON(rawToChar(res$content))\nhead(dat$items[,c(\"name\", \"has_issues\")])                      \n\n                     name has_issues\n1       quarto_titlepages       TRUE\n2           quarto-thesis       TRUE\n3      NOAA-quarto-simple       TRUE\n4        NOAA-quarto-book       TRUE\n5            QuartoReport       TRUE\n6 12-07-21-GitHub-Actions       TRUE"
  },
  {
    "objectID": "REST-API-feb-28.html#streamnet-cax-rest-api",
    "href": "REST-API-feb-28.html#streamnet-cax-rest-api",
    "title": "Quick Start: REST API in R",
    "section": "StreamNet CAX REST API",
    "text": "StreamNet CAX REST API\nThis is the database I want to get data from\nhttps://www.streamnet.org/resources/exchange-tools/rest-api-documentation/\nOk, not so helpful. In particular it doesn’t show me the full url and doesn’t tell me that I need an API key or how to pass it in!"
  },
  {
    "objectID": "REST-API-feb-28.html#whats-an-api-key",
    "href": "REST-API-feb-28.html#whats-an-api-key",
    "title": "Quick Start: REST API in R",
    "section": "What’s an API key??",
    "text": "What’s an API key??\n\nWhat’s an API key?? A kind of token. Gives you access and gives you particular permissions, like read-only, read-write, etc.\nDo I need one? No! Some REST APIs don’t need a key.\nHow did you know you needed one for CAX? I didn’t. My queries didn’t work and so my collaborator went and talked to the CAX folks who set up the REST API."
  },
  {
    "objectID": "REST-API-feb-28.html#stop-api-keys",
    "href": "REST-API-feb-28.html#stop-api-keys",
    "title": "Quick Start: REST API in R",
    "section": "Stop: API Keys",
    "text": "Stop: API Keys\nrCAX uses public read-only API key for accessing this public database. It is part of the package. But for the raw code shown in this talk I X’d out the key. Even though it is a public and not sensitive.\nSee the comments at the end for how to write code without including the API key in your code. You’ll see that code if you look at the raw qmd file for this talk."
  },
  {
    "objectID": "REST-API-feb-28.html#get-a-url-query-that-works.",
    "href": "REST-API-feb-28.html#get-a-url-query-that-works.",
    "title": "Quick Start: REST API in R",
    "section": "Get a URL query that works.",
    "text": "Get a URL query that works.\nLook at the documentation, ask someone, ask the database developers. Getting that first URL is the hard part. After that you are golden.\nres <- httr::GET(\"https://api.streamnet.org/api/v1/ca.json?table_id=4EF09E86-2AA8-4C98-A983-A272C2C2C7E3&XApiKey=XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&page=1&per_page=10\")\ndata <-  jsonlite::fromJSON(rawToChar((res$content)))\nLet’s parse this URL\nhttps://api.streamnet.org/api/v1/ca.json?table_id=4EF09E86-2AA8-4C98-A983-A272C2C2C7E3&XApiKey=XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&page=1&per_page=10"
  },
  {
    "objectID": "REST-API-feb-28.html#tables",
    "href": "REST-API-feb-28.html#tables",
    "title": "Quick Start: REST API in R",
    "section": "Tables",
    "text": "Tables\nLooking at the documentation, you might guess that this gives you “tables”. Let’s try it:\nres <- httr::GET(\"https://api.streamnet.org/api/v1/ca/tables.json?XApiKey=XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\ndata <-  jsonlite::fromJSON(rawToChar((res$content)))\nJack Pot!! The table ids that I need for my queries!"
  },
  {
    "objectID": "REST-API-feb-28.html#keeping-your-api-key-private-1",
    "href": "REST-API-feb-28.html#keeping-your-api-key-private-1",
    "title": "Quick Start: REST API in R",
    "section": "Keeping your API key private 1",
    "text": "Keeping your API key private 1\nIt is easy to keep this out of your code. Here’s how. You are going to save the key with a name in your .Renviron file in your user directory. Note you’ll need to do this on all your computers if you use multiple because the key stays on the local machine.\nNote the key is going to be in plain text. This is approach is not for sensitive keys."
  },
  {
    "objectID": "REST-API-feb-28.html#keeping-your-api-key-private-2",
    "href": "REST-API-feb-28.html#keeping-your-api-key-private-2",
    "title": "Quick Start: REST API in R",
    "section": "Keeping your API key private 2",
    "text": "Keeping your API key private 2\nThis is going to show you where .Renviron is and open it for you\ninstall.packages(\"usethis\")\nusethis::edit_r_environ() \nPaste this into the .Renviron file:\nBEST_APIKEY <- “the api key. It is long. Ask database dev for one.”"
  },
  {
    "objectID": "REST-API-feb-28.html#keeping-your-api-key-private-3",
    "href": "REST-API-feb-28.html#keeping-your-api-key-private-3",
    "title": "Quick Start: REST API in R",
    "section": "Keeping your API key private 3",
    "text": "Keeping your API key private 3\nRESTART R! You have to do this whenever you edit .Renviron\nNow whenever you need the API key in your code use\nSys.getenv(\"BEST_APIKEY\", \"\")\nFor example, here is how I could set up a url to get tables from the StreamNet REST API. Now I can share this code without sharing or exposing the API_KEY\nurl <- paste0(“https://api.streamnet.org/api/v1/ca/tables.json?XApiKey=”, Sys.getenv(\"BEST_APIKEY\", \"\"))\nres <- httr::GET(url)"
  },
  {
    "objectID": "REST-API-feb-28.html#keeping-your-api-key-private-4",
    "href": "REST-API-feb-28.html#keeping-your-api-key-private-4",
    "title": "Quick Start: REST API in R",
    "section": "Keeping your API key private 4",
    "text": "Keeping your API key private 4\nThe .Renviron file the API key is unencrypted. There are cases where you want a key to be encrypted (AWS keys, keys to get into your google drive are good examples) . Search online for how to do that. It’s the same idea though, just you are using an encrypted key rather than encrypted. In both cases, the key (or secret) stays on your local machine and is not shared in your code."
  },
  {
    "objectID": "REST-API-feb-28.html#creating-your-an-r-client",
    "href": "REST-API-feb-28.html#creating-your-an-r-client",
    "title": "Quick Start: REST API in R",
    "section": "Creating your an R client",
    "text": "Creating your an R client\nYou are ready to start creating your R package aka R REST API client! Clone someone else’s (recent) R package for a client and just edit that.\nhttps://github.com/nwfsc-math-bio/rCAX"
  },
  {
    "objectID": "REST-API-feb-28.html#rcax-key-functions",
    "href": "REST-API-feb-28.html#rcax-key-functions",
    "title": "Quick Start: REST API in R",
    "section": "rCAX key functions",
    "text": "rCAX key functions\n\nrcax_GET() - general query\nrcax_table_query() - query for a table given the tablename, makes the query list and calls rcax_GET()\nrcax_hli() - gets the tablename for a hli (high lev index), calls rcax_table_query()"
  },
  {
    "objectID": "REST-API-feb-28.html#rcax_get",
    "href": "REST-API-feb-28.html#rcax_get",
    "title": "Quick Start: REST API in R",
    "section": "rcax_GET()",
    "text": "rcax_GET()\nThis function is what prepares the url and runs the GET call to the REST API. I copied this from the ropensci/rredlist R package (R client for IUCN REST API\nGoal 1. Get this to “work”\nres <- rcax_GET(\"ca/tables\")\nGoal 2. Get this to “work”\nres <- rcax_GET(\"ca\", query=list(table_id=\"xxxx\", XAPIKey=\"xxx\"))\nIt should return some JSON."
  },
  {
    "objectID": "REST-API-feb-28.html#rcax_get-1",
    "href": "REST-API-feb-28.html#rcax_get-1",
    "title": "Quick Start: REST API in R",
    "section": "rcax_GET()",
    "text": "rcax_GET()\nThe rcax_GET.R file is a series of utility functions.\n\nrcax_GET() - uses crul package\nrcax_base() - base url to REST API\nrcax_ua() - creates a user agent string to tell REST API who is pinging it\ncheck_key() - gets the API key\nrcax_parse() - parses the JSON output"
  },
  {
    "objectID": "REST-API-feb-28.html#rcax_get-2",
    "href": "REST-API-feb-28.html#rcax_get-2",
    "title": "Quick Start: REST API in R",
    "section": "rcax_GET()",
    "text": "rcax_GET()\nRead documentation\n\nurl = everything up to the ?\nquery = the query params as a list\nuseragent = optional but it is a string\n\n    rcax_GET <- function(path, key = NULL, query=NULL, ...){\n      cli <- crul::HttpClient$new(\n        url = file.path(rcax_base(), path),\n        opts = list(useragent = rcax_ua())\n      )\n      temp <- cli$get(query = c(query, list(XApiKey = check_key(key))), ...)\n      temp$raise_for_status()\n      x <- temp$parse(\"UTF-8\")\n      err_catcher(x)\n      return(x)\n    }"
  },
  {
    "objectID": "REST-API-feb-28.html#rcax_get-3",
    "href": "REST-API-feb-28.html#rcax_get-3",
    "title": "Quick Start: REST API in R",
    "section": "rcax_GET()",
    "text": "rcax_GET()\nres <- httr::GET(\"https://api.streamnet.org/api/v1/ca.json?table_id=4EF09E86-2AA8-4C98-A983-A272C2C2C7E3&XApiKey=XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&page=1&per_page=10\")\nrcax_base() <- function() \"https://api.streamnet.org/api/v1\"\npath <- \"ca.json\"\nquery <-\n  list(table_id=\"4EF09E86-2AA8-4C98-A983-A272C2C2C7E3\",\n    XAPIKey=\"XXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n    page=1, per_page=10)\nrcax_ua() <- function() \"rCAX R client\"\nrcax_GET <- function(path, key = NULL, query=NULL, ...){\n  cli <- crul::HttpClient$new(\n    url = file.path(rcax_base(), path),\n    opts = list(useragent = rcax_ua())\n  )\n  temp <- cli$get(query = query, ...)\n  temp$raise_for_status()\n  x <- temp$parse(\"UTF-8\")\n  err_catcher(x)\n  return(x)\n}"
  },
  {
    "objectID": "REST-API-feb-28.html#filter-function-woes-1",
    "href": "REST-API-feb-28.html#filter-function-woes-1",
    "title": "Quick Start: REST API in R",
    "section": "filter function woes 1",
    "text": "filter function woes 1\nI wanted to be able to only retrieve data for a particular population, so a value in the pop_id column. There was no info, and none of the standard ways I found via online searching worked."
  },
  {
    "objectID": "REST-API-feb-28.html#filter-function-woes-2",
    "href": "REST-API-feb-28.html#filter-function-woes-2",
    "title": "Quick Start: REST API in R",
    "section": "filter function woes 2",
    "text": "filter function woes 2\nFinally in my online searches, I stumbled on the “filter” query parameter approach. I asked chatGPT, “Show me how to create a filter in a REST API query.” That got me closer, but there are still multiple way to do it. Then, I was staring at some CAX html page source code and found some Javascript (which I don’t know) with a function filter. It appeared to use “json” (which I also don’t know). Then I asked chatGPT to show me a REST API filter with JSON. Jack pot!"
  },
  {
    "objectID": "REST-API-feb-28.html#filter-function",
    "href": "REST-API-feb-28.html#filter-function",
    "title": "Quick Start: REST API in R",
    "section": "filter function",
    "text": "filter function\n\nrcax_filter() - converts a list into json, which is what this REST API wants"
  },
  {
    "objectID": "REST-API-feb-28.html#faqs-1",
    "href": "REST-API-feb-28.html#faqs-1",
    "title": "Quick Start: REST API in R",
    "section": "FAQs 1",
    "text": "FAQs 1\n\nIs this easier than using Oracle? Totally. Dead easy. You only need the URL and API Key. The database devs can set up the key however they want. The keys you’ll see today are the public and read-only key for the public database (otherwise I would not show them!).\nHow do I find out if my database has a REST API? Maybe it is on their documentation but you might just have to ask. Apparently you can set up REST API for an Oracle database? I know nothing about this, but if you struggle w getting data from an Oracle database, you might ask if they have a REST API set up."
  },
  {
    "objectID": "REST-API-feb-28.html#faqs-2",
    "href": "REST-API-feb-28.html#faqs-2",
    "title": "Quick Start: REST API in R",
    "section": "FAQs 2",
    "text": "FAQs 2\n\nHow do I find out the syntax REST API URLs? If you are lucky, the REST API for your database has documentation. Otherwise you will have to resort to trial and error or, better, reach out to the database developers. However, all you really need is 1 or 2 examples of the URL for the REST API.\nWhat there isn’t standard syntax?? Yes and No. The first part url+query params is standard, but you need to find out the query param names and the values that those can take. Filter or subsetting the data is also very idiosyncratic. Documentation is often poor, in which case you need to talk to the database devs."
  },
  {
    "objectID": "REST-API-feb-28.html#faqs-3",
    "href": "REST-API-feb-28.html#faqs-3",
    "title": "Quick Start: REST API in R",
    "section": "FAQs 3",
    "text": "FAQs 3\n\nDo I need an API key? No! Some REST APIs don’t need a key, but I think in that case, they often limit how much you can ping the database. I show an example below of using the GitHub REST API which doesn’t need a key.\nWhat’s an API key?? A kind of token. Gives you access and gives you particular permissions, like read-only, read-write, certain limit of data, etc. Where do I get it? Depends. Documentaiton should say or contact the database owners.\n\n\n\nHome"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#todays-plan",
    "href": "Agile-Mar-3-2023.html#todays-plan",
    "title": "Intro to Kaizen and Agile",
    "section": "Today’s Plan",
    "text": "Today’s Plan\n\nA Kaizen group game! The Ball Point Game\nLearn about the core ideas of “Agile” for team projects\nIntro to the basics of Scrum Sprints\nDemo of Scrum Sprint on GitHub project boards"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#what-is-kaizen",
    "href": "Agile-Mar-3-2023.html#what-is-kaizen",
    "title": "Intro to Kaizen and Agile",
    "section": "What is Kaizen?",
    "text": "What is Kaizen?\nKaizen means continuous improvement but refers more specifically to a cycle of improvement. In its simple1 form, it is the Deming Cycle\n\nPlan\nDo = work the plan\nCheck = how’d we do?\nAct (or Reflect) = think about what the results mean and what you should do in response\n\nBut Kaizen is more than that. Kaizen also involves flattening team hierarchy to foster improvement and innovation. Kaizen seeks to “empower” the worker/developers and flips the role of the manager from “boss” to coach/teacher/servant.\nKaizen more classically is shown with more intermediary steps"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#what-is-agile",
    "href": "Agile-Mar-3-2023.html#what-is-agile",
    "title": "Intro to Kaizen and Agile",
    "section": "What is agile?",
    "text": "What is agile?\nA lightweight workflow structure for software development which is characterized by 4 key features, 2 of which are closely Kaizen related. In this lecture, I’ll introduce SCRUM, a very popular agile workflow process.\nThe term “agile” is traced back to the 2001 Agile Manifesto1, but the ideas are much earlier and broader. It is very related to Kaizen ideas and “Toyota Way”.\nThis was a meeting of innovation visionaries who were all exploring similar ideas of how the structure of teams affects innovation, but in different ways."
  },
  {
    "objectID": "Agile-Mar-3-2023.html#are-these-useful-for-science",
    "href": "Agile-Mar-3-2023.html#are-these-useful-for-science",
    "title": "Intro to Kaizen and Agile",
    "section": "Are these useful for science?",
    "text": "Are these useful for science?\nYes! These are methods for driving innovation and discovery.\nElements of Kaizen and agile can be used in isolation. These are proven methods to improve team collaboration and project workflow.\n\n\n\n\n\n\nNote\n\n\nAgile methods are ubiquitous in software development. But also widely used in any innovation-driven industry.\nKaizen is a core element of Lean Manufacturing, a very influential methodology in modern manufacturing. Search for “Toyota Way”."
  },
  {
    "objectID": "Agile-Mar-3-2023.html#four-elements-of-agile",
    "href": "Agile-Mar-3-2023.html#four-elements-of-agile",
    "title": "Intro to Kaizen and Agile",
    "section": "Four elements of agile",
    "text": "Four elements of agile\nI divide the ideas in agile methodologies into four areas that are always present in one form or another.\n\n\n\n\n\n\n\n\n\nBreaking work into chunks\nReflection and planning after each chunk\nRadically anti-hierarchical team structure\nRegular facetime\nRespect for the individual (learning focus)\nEarly and regular end-user feedback"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#iterative-cycles",
    "href": "Agile-Mar-3-2023.html#iterative-cycles",
    "title": "Intro to Kaizen and Agile",
    "section": "Iterative Cycles",
    "text": "Iterative Cycles\nA key principle: dividing work into 10-30 day chunks with plan and review (or check) elements"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#flat-self-organizing-teams",
    "href": "Agile-Mar-3-2023.html#flat-self-organizing-teams",
    "title": "Intro to Kaizen and Agile",
    "section": "Flat, self-organizing teams",
    "text": "Flat, self-organizing teams\nFlat team structure, team member “agency” and a spirit of cooperation instead of competition is central to Kaizen and agile. Two key agile team habits that support this are:\n\n\nTask boards\n\nvisualize your workflow\nteam awareness\nencourages cycles of work\nencourages intentionality\nhelps team not waste time on unimportant things\n\n\nFacetime\n\nshort daily check-ins, aka “stand-ups”\nco-working, group or often paired"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#task-boards-1",
    "href": "Agile-Mar-3-2023.html#task-boards-1",
    "title": "Intro to Kaizen and Agile",
    "section": "Task boards",
    "text": "Task boards\nHere is a task board set up on a GitHub project board."
  },
  {
    "objectID": "Agile-Mar-3-2023.html#why-use-a-task-board",
    "href": "Agile-Mar-3-2023.html#why-use-a-task-board",
    "title": "Intro to Kaizen and Agile",
    "section": "Why use a task board?",
    "text": "Why use a task board?\n\n\n\n\n\n\n\n\n\nteam awareness fundamentally changes the team dynamic\nforces work to be iterative and incremental\nhelps team define a minimally complete chunk of work that can be reviewed\nquickly reveals bottlenecks and barriers"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#keeping-the-task-board-up-to-date",
    "href": "Agile-Mar-3-2023.html#keeping-the-task-board-up-to-date",
    "title": "Intro to Kaizen and Agile",
    "section": "Keeping the task board up to date",
    "text": "Keeping the task board up to date\nKeeping the team task board fresh won’t happen by itself. Everyone get pulled into their own rabbit hole and then team becomes silo-ed.\n\n\nDaily Standup\n\n\n\n\n\n\ntime-boxed 15 minutes\nFORM: what I did yesterday, what I plan to do today, any barriers\na designated team facilitator runs this\ndone around the task board\ncan be done asynchronously but much better if it is live\ngets the team in flow"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#scrum",
    "href": "Agile-Mar-3-2023.html#scrum",
    "title": "Intro to Kaizen and Agile",
    "section": "Scrum",
    "text": "Scrum\nMost popular and widely used method in software development, but not restricted to software at all.\n\nFormalizes the workflow cycles and events"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#scrum-roles-and-artifacts",
    "href": "Agile-Mar-3-2023.html#scrum-roles-and-artifacts",
    "title": "Intro to Kaizen and Agile",
    "section": "Scrum Roles and Artifacts",
    "text": "Scrum Roles and Artifacts\n\n\nRoles\n\nProduct Owner: Job is to decide what the group is doing and curate the backlog of tasks\nScrum master: Facilitator and coach the team\nDevelopers: Do the tasks\n\n\nArtifacts\n\nBacklog: All the planned tasks in various stages of ready\nSprint Backlog: Things to be completed in current sprint\nProduct Increment: What you will complete in this sprint. Needs to be something you can demo or present"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#sprint-cycle",
    "href": "Agile-Mar-3-2023.html#sprint-cycle",
    "title": "Intro to Kaizen and Agile",
    "section": "Sprint Cycle",
    "text": "Sprint Cycle\nProduct Owner Works on the backlog and gets tasks ready for next sprint.\n\n\nScrum Master\n\nDay 1: Facilitates planning mtg\nDay 8-28:\n\nRuns daily standups.\nHelps team members with barriers\nWorks with product owner\n\nLast day: Facilitate Retrospective meeting\n\n\nTeam\n\nDay 1: Sprint Planning\nDay 8-28: Work on tasks with daily standups\n2 days before end of sprint: Sprint Review Show work to “customer”1\nLast day: Retrospective Team reflects on how their process of work did and picks one thing to do better\n\n\n\n\n1 In a science context, this might be an informal presentation. Formal enough that you need to do a good job, not so formal as to need to spend a lot of time on polishing it."
  },
  {
    "objectID": "Agile-Mar-3-2023.html#i-left-out-some-big-parts-of-scrum",
    "href": "Agile-Mar-3-2023.html#i-left-out-some-big-parts-of-scrum",
    "title": "Intro to Kaizen and Agile",
    "section": "I left out some big parts of Scrum",
    "text": "I left out some big parts of Scrum\nThis is a Lean/Agile/Kaizen methodology\n\nradically anti-hierarchical team structure\nrethinking of human agency within team structures\nradical candor and authenticity within teams\n\nScrum as implemented in software development\nUser Stories and Epics How you plan tasks as Scrum is implemented in software development.\nVelocity Velocity and measuring the size of tasks is a key part of Scrum in software development."
  },
  {
    "objectID": "Agile-Mar-3-2023.html#next-steps-to-learn",
    "href": "Agile-Mar-3-2023.html#next-steps-to-learn",
    "title": "Intro to Kaizen and Agile",
    "section": "Next steps to learn",
    "text": "Next steps to learn\n\nWatch some of the videos or read a intro book. I found this 3-hr video course most helpful. Free via UW Libraries. Scrum Fundamentals\nOnce you understand the basics, start experimenting with sprints and sprint planning on your own (solo), e.g. for a talk or a class paper. Get used to the plan, work from tasks, review framework before trying with a group.\nWatch me plan a simple solo sprint. 5 minute video. Simple Sprint Planning using GitHub"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#example-sprint-with-github",
    "href": "Agile-Mar-3-2023.html#example-sprint-with-github",
    "title": "Intro to Kaizen and Agile",
    "section": "Example Sprint with GitHub",
    "text": "Example Sprint with GitHub"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#videos-to-learn-more",
    "href": "Agile-Mar-3-2023.html#videos-to-learn-more",
    "title": "Intro to Kaizen and Agile",
    "section": "Videos to learn more",
    "text": "Videos to learn more\n\n\nKanban Boards\nAtlassian Kanban video series\n intro\n designing your Kanban board\n work in progress limits\n writing kanban cards\n\nScrum\nThese cover the basic elements\n 5 minute intro to Scrum Basic Structure of Scrum\n 12 minute intro to Scrum Product development perspective\n LabScrum"
  },
  {
    "objectID": "Agile-Mar-3-2023.html#some-references-i-liked",
    "href": "Agile-Mar-3-2023.html#some-references-i-liked",
    "title": "Intro to Kaizen and Agile",
    "section": "Some references I liked",
    "text": "Some references I liked\n\nI really liked this video course. You can get it free via UW Libraries. Scrum Fundamentals\nScrum: The Ultimate Beginner’s Guide To Learn And Master Scrum Agile Framework by Hein Smith\nScrum: The Art of Doing Twice the Work in Half the Time by Jeff Sutherland History, won’t teach you Scrum\n\n\n\n\nHome"
  }
]